# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app.form.registration:
            class: AppBundle\Form\RegistrationType
            tags:
                - { name: form.type, alias: app_user_registration }

    my_user_provider:
        class: AppBundle\Provider\FOSUBUserProvider
        arguments:
            - "@fos_user.user_manager"
            - "@fos_user.util.token_generator.default"
            - {facebook: facebookId, google: googleId, github: githubId}

    search.project_indexer:
        class: AppBundle\Search\ProjectIndexer\PostgresIndexer

    search.specialist_indexer:
        class: AppBundle\Search\SpecialistIndexer\PostgresIndexer



    AppBundle\Search\ProjectIndexer\ProjectIndexerInterface: '@search.project_indexer'
    AppBundle\Search\SpecialistIndexer\SpecialistIndexerInterface: '@search.specialist_indexer'

    search.project_searcher:
        class: AppBundle\Search\ProjectSearcher\PostgresSearcher

    search.specialist_searcher:
        class: AppBundle\Search\SpecialistSearcher\PostgresSearcher

    AppBundle\Search\ProjectSearcher\ProjectSearcherInterface: '@search.project_searcher'
    AppBundle\Search\SpecialistSearcher\SpecialistSearcherInterface: '@search.specialist_searcher'

    AppBundle\Service\UserService:
        arguments:
            $kernelRoot: "%kernel.root_dir%"
            $avatarMaxSize: "%avatar_max_size%"

    AppBundle\Service\ProjectService:
        arguments:
            $kernelRoot: "%kernel.root_dir%"
            $screenMaxSize: "%project_screen_max_size%"

    AppBundle\Repository\SpecializationRepository:
        class: AppBundle\Repository\SpecializationRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - AppBundle\Entity\Specialization

    AppBundle\Repository\OfferRepository:
        class: AppBundle\Repository\OfferRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
        - AppBundle\Entity\Offer

    AppBundle\Repository\ProjectOpenRoleRepository:
        class: AppBundle\Repository\ProjectOpenRoleRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
        - AppBundle\Entity\ProjectOpenRole

    AppBundle\Repository\UserRepository:
        class: AppBundle\Repository\UserRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - AppBundle\Entity\User

    AppBundle\Repository\MessageRepository:
        class: AppBundle\Repository\MessageRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
        - AppBundle\Entity\Message

    AppBundle\EventSubscriber\ProjectChangeProgressStatusSubscriber:
        arguments:
            $fromEmailAddress: '%from_email%'

    AppBundle\EventSubscriber\ProjectSearchIndexerSubscriber:
        tags:
            - { name: doctrine.event_subscriber, event: postPersist }
            - { name: doctrine.event_subscriber, event: postUpdate }

    AppBundle\EventSubscriber\SpecialistSearchIndexerSubscriber:
        tags:
            - { name: doctrine.event_subscriber, event: postPersist }
            - { name: doctrine.event_subscriber, event: postUpdate }

    AppBundle\Sockets\Client:
        arguments:
            $url: '%websocket_url%'
            $port: '%websocket_port%'

    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
        - { name: twig.extension }
